# Generated by Django 3.2.25 on 2024-08-17 03:31

import clients.validators
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0003_auto_20240731_2141'),
    ]

    operations = [
        migrations.AlterField(
            model_name='client',
            name='cpf',
            field=models.CharField(error_messages={'unique': 'CPF não disponível.'}, max_length=11, unique=True, validators=[clients.validators.CpfValidator(message='CPF inválido.')], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='client',
            name='email',
            field=models.EmailField(error_messages={'blank': 'Por favor, preencha o campo de email.', 'invalid': 'Informe um endereço de email válido.', 'null': 'Por favor, preencha o campo de email.', 'unique': 'E-mail não disponível.'}, max_length=255, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail'),
        ),
        migrations.AlterField(
            model_name='client',
            name='last_name',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[A-Za-z][A-Za-z ]*$', 'O sobrenome deve conter apenas letras e espaços'), django.core.validators.MinLengthValidator(2, 'Sobrenome muito pequeno.'), django.core.validators.MaxLengthValidator(50, 'Sobrenome muito grande.')], verbose_name='Sobrenome'),
        ),
        migrations.AlterField(
            model_name='client',
            name='phone',
            field=models.CharField(error_messages={'blank': 'Telefone não pode ser vazio.', 'invalid': 'Número de telefone inválido.', 'null': 'Telefone não pode ser vazio.', 'unique': 'Telefone não disponível.'}, max_length=11, unique=True, validators=[clients.validators.validate_phone_number], verbose_name='Telefone'),
        ),
        migrations.AlterField(
            model_name='client',
            name='username',
            field=models.CharField(error_messages={'blank': 'Nome de usuário não pode ser vazio.', 'invalid': 'Informe um nome de usuário válido. O valor deve conter apenas letras, números e os seguintes caracteres @.+-_', 'null': 'Nome de usuário não pode ser vazio.', 'unique': 'Username já existe.'}, max_length=150, unique=True, validators=[django.core.validators.MinLengthValidator(2, 'Nome de usuário deve ter de 2 a 150 caracteres.'), django.core.validators.MaxLengthValidator(150, 'Nome de usuário deve ter de 2 a 150 caracteres.'), django.contrib.auth.validators.UnicodeUsernameValidator()]),
        ),
    ]
