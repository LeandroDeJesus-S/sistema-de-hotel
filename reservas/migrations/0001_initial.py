# Generated by Django 3.2.25 on 2024-07-25 16:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=45, unique=True, verbose_name='Nome')),
                ('descricao_curta', models.CharField(max_length=100, unique=True, verbose_name='Descrição curta')),
            ],
            options={
                'verbose_name': 'Benefício',
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[\\w ]+$', 'Nome da classe é inválido.')], verbose_name='Classe')),
            ],
        ),
        migrations.CreateModel(
            name='Quarto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator('^\\d{3}[A-Z]?$')], verbose_name='Número')),
                ('capacidade_adultos', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5, 'Quantidade de adultos excedida. (max: 5)'), django.core.validators.MinValueValidator(1, 'Quantidade de adultos insuficiente. (min: 1)')], verbose_name='Capacidade adultos')),
                ('capacidade_criancas', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3, 'Quantidade de crianças excedida. (max: 3)'), django.core.validators.MinValueValidator(0, 'Quantidade de crianças insuficiente. (min: 0)')], verbose_name='Capacidade crianças')),
                ('tamanho', models.FloatField(validators=[django.core.validators.MinValueValidator(2, 'O quarto é muito pequeno. (min: 2)'), django.core.validators.MaxValueValidator(30, 'O quarto é muito grande. (max: 30)')], verbose_name='Tamanho m²')),
                ('preco_diaria', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(100, 'O valor do quarto deve ser de no mínimo R$100.00.'), django.core.validators.MaxValueValidator(500, 'O valor do quarto deve ser de no máximo R$500.00.')], verbose_name='Diária')),
                ('disponivel', models.BooleanField(default=True, verbose_name='Disponível')),
                ('image', models.ImageField(blank=True, null=True, upload_to='%Y-%m', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'], 'Somete jpg ou png'), django.core.validators.validate_image_file_extension], verbose_name='Imagem')),
                ('short_desc', models.CharField(max_length=255, unique=True, verbose_name='Descrição curta')),
                ('long_desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Descrição longa')),
                ('beneficio', models.ManyToManyField(related_name='quarto_beneficios', related_query_name='quarto_beneficio', to='reservas.Beneficio', verbose_name='Benefícios')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quartos', related_query_name='quarto', to='reservas.classe')),
            ],
            options={
                'ordering': ['-disponivel'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField(verbose_name='Check-in')),
                ('checkout', models.DateField(verbose_name='Check-out')),
                ('observacoes', models.TextField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('[\\w\\s]*')], verbose_name='Observações')),
                ('custo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(100)], verbose_name='Valor da reserva')),
                ('ativa', models.BooleanField(default=False, verbose_name='Ativa')),
                ('status', models.CharField(choices=[('I', 'iniciada'), ('P', 'processando'), ('A', 'ativa'), ('C', 'cancelada'), ('F', 'finalizada')], default='I', max_length=2, verbose_name='Status')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criada em')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reserva_clientes', related_query_name='reserva_cliente', to=settings.AUTH_USER_MODEL)),
                ('quarto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reserva_quartos', related_query_name='reserva_quarto', to='reservas.quarto')),
            ],
        ),
    ]
